<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 使用接口 代理的方式 namespace必须和接口的全路径名称一致 -->
<mapper namespace="edu.fzu.qujing.mapper.UserMapper">

    <select id="getCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM user;
    </select>

    <resultMap id="userRs" type="edu.fzu.qujing.bean.User">
        <id property="id" column="id"></id>
        <result property="email" column="email"></result>
        <result property="studentId" column="studentId"></result>
        <result property="username" column="username"></result>
        <result property="points" column="points"></result>
        <result property="state" column="state"></result>
        <result property="endTime" column="endTime"></result>
        <result property="receiveTaskNumber" column="receiveTaskNumber"></result>
        <result property="maliciousAcceptanceNumber" column="maliciousAcceptanceNumber"></result>
        <result property="reportedNumber" column="reportedNumber"></result>
    </resultMap>

    <select id="getUserByEmail" resultMap="userRs">
        SELECT id,email,studentId,username,points,startTime,
        endTime,receiveTaskNumber,maliciousAcceptanceNumber,reportedNumber
        FROM user
        WHERE email = #{email}
    </select>

    <resultMap id="taskRs1" type="edu.fzu.qujing.bean.User">
        <id property="id" column="uid"></id>
        <result property="email" column="uemail"></result>
        <result property="studentId" column="ustudentId"></result>
        <collection property="acceptTask" ofType="edu.fzu.qujing.bean.Task">
            <id property="id" column="tid"></id>
            <result property="name" column="tname"></result>
            <result property="points" column="tpoints"></result>
            <result property="deadline" column="tdeadline"></result>
            <result property="expedited" column="texpedited"></result>
            <result property="content" column="tcontent"></result>
            <result property="senderid" column="tsenderid"></result>
            <result property="receiverid" column="treceiverid"></result>
        </collection>
    </resultMap>

    <resultMap id="taskRs2" type="edu.fzu.qujing.bean.User">
        <id property="id" column="uid"></id>
        <result property="email" column="uemail"></result>
        <result property="studentId" column="ustudentId"></result>
        <collection property="publishTask" ofType="edu.fzu.qujing.bean.Task">
            <id property="id" column="tid"></id>
            <result property="name" column="tname"></result>
            <result property="points" column="tpoints"></result>
            <result property="deadline" column="tdeadline"></result>
            <result property="expedited" column="texpedited"></result>
            <result property="content" column="tcontent"></result>
            <result property="senderid" column="tsenderid"></result>
            <result property="receiverid" column="treceiverid"></result>
        </collection>
    </resultMap>

    <select id="listAcceptTask" resultMap="taskRs1">
        SELECT
        u.id uid,
        u.email uemail,
        u.studentId ustudentId,
        t.id tid,
        t.name tname,
        t.points tpoints,
        t.deadline tdeadline,
        t.expedited texpedited,
        t.senderAccomplish tsenderAccomplish,
        t.receiverAccomplish treceiverAccomplish,
        t.content tcontent,
        t.ttid tttid,
        tt.id ttid,
        tt.name ttname,
        t.senderCancle tsenderCancle,
        t.receiverCancle treceiverCancle,
        t.senderid tsenderid,
        t.receiverid treceiverid,
        t.publishTime tpublishTime
        FROM task t
        INNER JOIN user u ON u.studentId = t.receiverid
        INNER JOIN taskType tt ON t.ttid = tt.id
        <where>
            <choose>
                <when test="email != null and email != ''">
                    u.emai = #{email}
                </when>
                <when test="studentId != null and studentId != ''">
                    u.studentId = #{studentId}
                </when>
            </choose>
            <choose>
                <when test="senderAccomplish != null">
                    AND t.senderAccomplish = #{senderAccomplish}
                </when>
                <when test="receiverAccomplish != null">
                    AND t.receiverAccomplish = #{receiverAccomplish}
                </when>
            </choose>
            AND senderCancle = 0
            AND receiverCancle = 0
        </where>
        LIMIT #{pos},#{pages}
    </select>

    <select id="listPublishTask" resultMap="taskRs2">
        SELECT
        u.id uid,
        u.email uemail,
        u.studentId ustudentId,
        t.id tid,
        t.name tname,
        t.points tpoints,
        t.deadline tdeadline,
        t.expedited texpedited,
        t.senderAccomplish tsenderAccomplish,
        t.receiverAccomplish treceiverAccomplish,
        t.content tcontent,
        t.ttid tttid,
        tt.id ttid,
        tt.name ttname,
        t.senderCancle tsenderCancle,
        t.receiverCancle treceiverCancle,
        t.senderid tsenderid,
        t.receiverid treceiverid,
        t.publishTime tpublishTime
        FROM task t
        INNER JOIN user u ON u.studentId = t.senderid
        INNER JOIN taskType tt ON t.ttid = tt.id
        <where>
            <choose>
                <when test="email != null and email != ''">
                    u.emai = #{email}
                </when>
                <when test="studentId != null and studentId != ''">
                    u.studentId = #{studentId}
                </when>
            </choose>
            <choose>
                <when test="senderAccomplish != null">
                    AND t.senderAccomplish = #{senderAccomplish}
                </when>
                <when test="receiverAccomplish != null">
                    AND t.receiverAccomplish = #{receiverAccomplish}
                </when>
            </choose>
            AND senderCancle = 0
            AND receiverCancle = 0
        </where>
        LIMIT #{pos},#{pages}
    </select>

    <select id="listUserByPagination" resultMap="userRs">
        SELECT email,studentId,username,points,startTime,
        endTime,receiveTaskNumber,maliciousAcceptanceNumber,reportedNumber
        FROM user
        <where>
            receiverid = '0'
        </where>
        LIMIT #{pos},#{pages}
    </select>

    <update id="updateUser" flushCache="true">
        UPDATE user
        <set>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="points != null">
                points = #{points},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="endTime != null">
                endTime = #{endTime},
            </if>
            <if test="receiveTaskNumber != null">
                receiveTaskNumber = #{receiveTaskNumber},
            </if>
            version = version + 1;
        </set>
        <where>
            <choose>
                <when test="id != null">
                    id = #{id}
                </when>
                <when test="email != null and email != ''">
                    emai = #{email}
                </when>
                <when test="studentId != null and studentId != ''">
                    studentId = #{studentId}
                </when>
            </choose>
        </where>
    </update>

    <insert id="addUser" useGeneratedKeys="true" keyProperty="id" flushCache="true">
        INSERT INTO user (email,studentId,username,password,state,points)
        VALUES (#{email},#{studentId},#{username},#{password},#{state},#{points})
    </insert>

    <select id="getUserToCheck" resultType="edu.fzu.qujing.bean.User">
        SELECT id,email,studentId,password,state,endTime,version
        FROM user
        <where>
            <choose>
                <when test="email != null and email !='' ">
                    email = #{email}
                </when>
                <when test="studentId != null and studentId !='' ">
                    studentId = #{studentId}
                </when>
            </choose>
        </where>
    </select>

    <delete id="deleteUser" flushCache="true">
        DELETE TABLE user
        <where>
            <choose>
                <when test="email != null and email != ''">
                    emai = #{email}
                </when>
                <when test="studentId != null and studentId != ''">
                    studentId = #{studentId}
                </when>
            </choose>
        </where>
    </delete>

    <select id="getUserById" resultMap="userRs">
        SELECT id,email,studentId,username,points,startTime,
        endTime,receiveTaskNumber,maliciousAcceptanceNumber,reportedNumber
        FROM user
        WHERE id = #{id}
    </select>

    <update id="updateUserToState" flushCache="true">
        UPDATE TABLE user
        <set>
            state = #{state},
            startTime = #{startTime},
            endTime = #{endTime},
            <if test="receiveTaskNumber != null">
                receiveTaskNumber = #{receiveTaskNumber},
            </if>
            <if test="maliciousAcceptanceNumber != null">
                maliciousAcceptanceNumber = #{maliciousAcceptanceNumber},
            </if>
            <if test="reportedNumber != null">
                reportedNumber = #{reportedNumber}
            </if>
        </set>
        <where>
            <choose>
                <when test="id != null">
                    id = #{id}
                </when>
                <when test="email != null and email != ''">
                    emai = #{email}
                </when>
                <when test="studentId != null and studentId != ''">
                    studentId = #{studentId}
                </when>
            </choose>
        </where>
    </update>

    <select id="getUserByStudentId" resultMap="userRs">
        SELECT id,email,studentId,username,points,startTime,
        endTime,receiveTaskNumber,maliciousAcceptanceNumber,reportedNumber
        FROM user
        <where>
            studentId = #{studentId}
        </where>
    </select>

    <select id="getPointsByStudentId" resultType="java.lang.Integer">
        SELECT points
        FROM user
        WHERE studentId = #{studentId}
    </select>

    <select id="getNumberOfTasksAccepted" resultType="edu.fzu.qujing.bean.User">
        SELECT id,receiveTaskNumber,version
        FROM user
        <where>
            studentId = #{studentId}
        </where>
    </select>




</mapper>